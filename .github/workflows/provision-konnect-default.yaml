name: Provision Konnect

on:
  workflow_call:
    inputs:
      vault_addr:
        description: 'Vault Address'
        type: string
        default: 'http://localhost:8300'
      action:
        description: 'Action to perform'
        required: true
        type: string
        default: 'provision' # 'provision' or 'destroy'
      environment:
        description: 'Environment to provision'
        type: string
        default: 'local'
      konnect_region:
        description: 'Konnect Region to provision resources'
        type: string
        default: 'eu'

jobs:
  provision-konnect:
    runs-on: ubuntu-latest

    env:
      TF_VAR_konnect_personal_access_token: ${{ secrets.KONNECT_PAT }}
      TF_VAR_environment: ${{ inputs.environment }}
      TF_VAR_konnect_server_url: https://${{ inputs.konnect_region }}.api.konghq.com
      TF_VAR_vault_addr: ${{ inputs.vault_addr }} 
      TF_VAR_vault_token: ${{ secrets.VAULT_TOKEN }}
      TERRAFORM_DIR: ${{ github.workspace }}/terraform/default
      PLANID: default

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'
      
      - name: Create S3 bucket if not exists
        run: |
          ./create-minio-bucket.sh konnect konnect

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
        working-directory: scripts

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config=config.s3.tfbackend \
            -backend-config="bucket=konnect" \
            -backend-config="key=$PLANID/${{ inputs.environment }}.tfstate" \
            -backend-config="region=main" \
            -backend-config="access_key=${{ secrets.S3_ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.S3_SECRET_KEY }}" 
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Plan
        if: ${{ inputs.action == 'provision' }}
        run: |
          terraform plan -out=tfplan
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Terraform Apply
        if: ${{ inputs.action == 'provision' }}
        id: tfapply
        run: |
          terraform apply -auto-approve tfplan
          # echo "$(terraform-bin output -json kong_gateway_control_plane_info | jq '[.[]]')" > kong_gateway_control_plane_info.json
          echo "$(terraform-bin output -json system_account_access_tokens)" > system_account_tokens.json
        working-directory: ${{env.TERRAFORM_DIR}}

      - name: Store System Account tokens in Vault
        if: ${{ inputs.action == 'provision' }}
        run: |
          for row in $(cat system_account_tokens.json | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }

            secret_name=$(_jq '.name')
            secret_value=$(_jq '.token')

            vault kv put secret/system-accounts/${secret_name} token=${secret_value}

            echo "Stored secret ${secret_name} in Vault."
          done
        working-directory: ${{env.TERRAFORM_DIR}}
        env:
          VAULT_ADDR: ${{ inputs.vault_addr }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      
      - name: Terraform destroy
        if: ${{ inputs.action == 'destroy' }}
        run: |
          terraform destroy -auto-approve
        working-directory: ${{env.TERRAFORM_DIR}}