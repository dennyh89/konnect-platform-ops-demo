name: Build Kong Gateway Image

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment (dev, staging, prod)'
        type: string
        default: local
      continue_on_scan_failure:
        description: 'Continue on Trivy scan failure'
        default: 'true'
        type: boolean

jobs:
  build-image:
    runs-on: ubuntu-latest

    env:
      ENV_FILE: .github/env/${{ inputs.environment }}.yaml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment configuration
        id: load_config
        run: |
          echo "Reading configuration from $ENV_FILE"
          CONFIG_VARS=$(yq eval 'keys' $ENV_FILE)
          
          for VAR in $CONFIG_VARS; do
            VALUE=$(yq eval ".${VAR}" $ENV_FILE)
            echo "${VAR^^}=${VALUE}" >> $GITHUB_ENV
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Login to the Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fetch Custom Plugin
        run: |
          git clone https://github.com/Kong/kong-plugin.git
        working-directory: docker

      - name: Download Kong Gateway
        run: |
          KONG_MAJOR_MINOR_VERSION=$(echo ${{ env.KONG_VERSION }} | cut -d. -f1-2 | tr -d '.')
          echo "Downloading Kong Gateway ${{ env.KONG_VERSION }}... with major version $KONG_MAJOR_MINOR_VERSION"
          curl -s -o kong.deb https://packages.konghq.com/public/gateway-$KONG_MAJOR_MINOR_VERSION/deb/debian/pool/bullseye/main/k/ko/kong-enterprise-edition_${{ env.KONG_VERSION }}/kong-enterprise-edition_${{ env.KONG_VERSION }}_amd64.deb
        working-directory: docker

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}

      - name: Scan Docker image with Trivy (Table Format)
        continue-on-error: ${{ inputs.continue_on_scan_failure }}
        run: |
          trivy image --exit-code 1 --no-progress ${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}

      - name: Save Trivy Scan Results (JSON Format)
        continue-on-error: ${{ inputs.continue_on_scan_failure }}
        run: |
          mkdir -p reports
          trivy image --format json --output reports/trivy-report.json ${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}

      - name: Create docker network for smoke tests
        run: |
          docker network create kong-net-${{ github.run_id }}
        continue-on-error: true

      - name: Run docker container
        run: |
            docker run -d --name kong-gateway \
            --network kong-net-${{ github.run_id }} \
            -p 8000:8000 -p 8100:8100 -p 8443:8443 \
            --env KONG_DATABASE=off \
            --env KONG_PLUGINS=bundled,myplugin \
            --env KONG_STATUS_LISTEN=0.0.0.0:8100 \
            --env KONG_DECLARATIVE_CONFIG=/kong.yaml \
            --env KONG_NGINX_WORKER_PROCESSES=1 \
            --health-cmd "kong health" \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 3 \
            --volume $(pwd)/kong.yaml:/kong.yaml \
            ${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}
        shell: bash
        working-directory: docker

      - name: Wait for Kong Gateway to start
        run: |
          timeout 60s sh -c 'until docker ps | grep kong-gateway | grep -q healthy; do echo "Waiting for Kong Gateway to be available..."; sleep 2; done'
        shell: bash

      - name: Run smoke tests
        run: |
          ./kong-smoke-tests.sh localhost ${{ github.workspace }}/smoke_test_report.md
          cat ${{ github.workspace }}/smoke_test_report.md
        shell: bash
        working-directory: ${{ github.workspace }}/scripts

      # - name: Test Kong Gateway Status
      #   run: |
      #     response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8100/status)
      #     echo "Response code: $response"
      #   shell: bash
      #   working-directory: docker

      # - name: Test Kong Gateway Proxy
      #   run: |
      #     response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/echo)
      #     echo "Response code: $response"
      #   shell: bash
      #   working-directory: docker

      - name: Run Load tests
        run: |
          set -e
          docker run --rm -i --network kong-net-${{ github.run_id }} \
            grafana/k6 run --vus 50 --duration 10s -e K6_TEST_URL=http://kong-gateway:8000 - <tests/k6/load.js

        working-directory: docker

      - name: Stop and remove Docker container and network
        if: always()
        run: |
          docker stop kong-gateway
          docker rm kong-gateway
          docker network rm kong-net-${{ github.run_id }}

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: docker
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}

      - name: Inspect
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_REPO }}:${{ env.KONG_VERSION }}-${{ inputs.environment }}   

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/*