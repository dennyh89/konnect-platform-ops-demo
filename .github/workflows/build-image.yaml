name: Build Kong Gateway Image

on:
  workflow_call:
    inputs:
      docker_registry:
        description: 'Docker Registry'
        required: true
        default: 'localhost:5000'
        type: string
      image_repo:
        description: 'Target Docker image repository'
        required: true
        type: string
      image_tag:
        description: 'Target Docker image tag'
        required: true
        type: string
      kong_version:
        description: 'Kong Gateway version'
        default: '3.7.0.0'
        type: string
      continue_on_scan_failure:
        description: 'Continue on Trivy scan failure'
        default: 'true'
        type: boolean
      vault_addr:
        description: 'Vault Address'
        default: 'http://localhost:8300'
        type: string
      vault_token:
        description: 'Vault Token'
        default: 'root'
        type: string

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Docker registry
        uses: docker/login-action@v3
        with:
          registry: localhost:5000
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Import Certificates
        id: import-certs
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ inputs.vault_addr }}
          token: ${{ inputs.vault_token }}
          secrets: |
            secret/data/certificates/demo ca | CA_CRT

      - name: Save CA Certificate to file
        run: |
          mkdir -p .tls
          touch .tls/ca.crt
          echo '${{ steps.import-certs.outputs.CA_CRT }}' >> .tls/ca.crt
        working-directory: docker

      - name: Fetch Custom Plugin
        run: |
          git clone https://github.com/Kong/kong-plugin.git
        working-directory: docker

      - name: Download docker-entrypoint.sh
        run: |
          curl -s -o docker-entrypoint.sh https://raw.githubusercontent.com/Kong/docker-kong/master/docker-entrypoint.sh
          chmod +x docker-entrypoint.sh
        working-directory: docker

      - name: Download Kong Gateway
        run: |
          curl -s -o kong.deb https://packages.konghq.com/public/gateway-37/deb/debian/pool/bullseye/main/k/ko/kong-enterprise-edition_${{ inputs.kong_version }}/kong-enterprise-edition_3.7.0.0_amd64.deb
        working-directory: docker

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker
          platforms: linux/amd64
          push: false
          tags: ${{ inputs.image_repo }}:${{ inputs.image_tag }}

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -

      - name: Scan Docker image with Trivy
        continue-on-error: ${{ inputs.continue_on_scan_failure }}
        run: |
          ./bin/trivy image --exit-code 1 --no-progress ${{ inputs.image_repo }}:${{ inputs.image_tag }}

      - name: Create docker network for tests
        run: |
          docker network create kong-net-${{ github.run_id }}
        continue-on-error: true
              

      - name: Run docker container
        run: |
            docker run -d --name kong-gateway \
            --network kong-net-${{ github.run_id }} \
            -p 8000:8000 -p 8100:8100 \
            --env KONG_DATABASE=off \
            --env KONG_PLUGINS=bundled,myplugin \
            --env KONG_STATUS_LISTEN=0.0.0.0:8100 \
            --env KONG_DECLARATIVE_CONFIG=/kong.yaml \
            --env KONG_LUA_SSL_TRUSTED_CERTIFICATE=/srv/shared/ssl/ca.crt,system \
            --health-cmd "kong health" \
            --health-interval 10s \
            --health-timeout 5s \
            --health-retries 3 \
            --volume $(pwd)/kong.yaml:/kong.yaml \
            ${{ inputs.image_repo }}:${{ inputs.image_tag }}
        shell: bash
        working-directory: docker

      - name: Wait for Kong Gateway to start
        run: |
          timeout 60s sh -c 'until docker ps | grep kong-gateway | grep -q healthy; do echo "Waiting for Kong Gateway to be available..."; sleep 2; done'
        shell: bash

      - name: Test Kong Gateway Status
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8100/status)
          echo "Response code: $response"
        shell: bash
        working-directory: docker

      - name: Test Kong Gateway Proxy
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/echo)
          echo "Response code: $response"
        shell: bash
        working-directory: docker

      - name: Run Load tests
        run: |
          set -e
          docker run --rm -i --network kong-net-${{ github.run_id }} \
            grafana/k6 run --vus 50 --duration 10s -e K6_TEST_URL=http://kong-gateway:8000 - <tests/k6/load.js

        working-directory: docker

      - name: Stop and remove Docker container and network
        if: always()
        run: |
          docker stop kong-gateway
          docker rm kong-gateway
          docker network rm kong-net-${{ github.run_id }}

      - name: Push Docker image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: docker
          platforms: linux/amd64
          push: true
          tags: ${{ inputs.docker_registry }}/${{ inputs.image_repo }}:${{ inputs.image_tag }}