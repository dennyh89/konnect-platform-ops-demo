name: Publish API

on:
  workflow_call:
    inputs:
      openapi_spec:
        description: "Path to the OpenAPI Specification file"
        required: true
        type: string
      environment:
        description: "Environment to deploy the API to"
        type: string
        default: dev
      konnect_server_url:
        description: "Kong Konnect server url"
        type: string
        default: "https://eu.api.konghq.com"
      control_plane_name:
        description: "Kong Konnect control plane name"
        type: string
        required: true
      vault_addr:
        description: "Vault Address"
        default: "http://localhost:8300"
        type: string
      system_account:
        description: "The system account to use for authentication with Konnect"
        type: string
        required: true

env:
  DECK_CONFIG_OIDC_ISSUER: ${{ secrets.OIDC_ISSUER }}

jobs:
  publish-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install extra rulesets for Spectral
        run: |
          npm install --save -D @stoplight/spectral-owasp-ruleset@^2.0

      - name: Import system account Token from Vault
        id: import-token
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ inputs.vault_addr }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            konnect/data/system_accounts/${{ inputs.system_account }} token | SYSTEM_ACCOUNT_TOKEN ;

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y_%m_%dT%H_%M_%S')" >> $GITHUB_ENV

      - name: Setup decK variables
        run: |

          # Set the API Name
          api_name=$(yq eval '.info.title' ${{ github.workspace }}/${{ inputs.openapi_spec }} | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
          echo "DECK_API_NAME=$api_name" >> $GITHUB_ENV

          # Set the Organization/BU
          organization=$(yq eval '.info.x-business-unit' ${{ github.workspace }}/${{ inputs.openapi_spec }})
          echo "DECK_ORGANIZATION=$organization" >> $GITHUB_ENV

          # Set the team responsible for the API
          team=$(yq eval '.info.x-team-name' ${{ github.workspace }}/${{ inputs.openapi_spec }})
          echo "DECK_CONFIG_OWNER=$team" >> $GITHUB_ENV

          # Set the namespace if available
          namespace=$(yq eval '.["x-kong-namespace"]' ${{ github.workspace }}/${{ inputs.openapi_spec }})
          if [ ! -z "$namespace" ]; then
            echo "DECK_NAMESPACE=$namespace" >> $GITHUB_ENV
          fi

      - name: Filter OAS servers
        run: |
          # Since this pipeline is for configuring the gateway, 
          # we only want to keep the internal servers for the environment we are deploying to.

          ENVIRONMENT="${{ inputs.environment }}"
          yq eval -i ".servers |= map(select(.x-environment == \"$ENVIRONMENT\" and .x-internal == true))"  ${{ github.workspace }}/${{ inputs.openapi_spec }}

          # Debug
          cat ${{ github.workspace }}/${{ inputs.openapi_spec }}

      - name: Read OAS into an environment variable
        id: oas-to-env
        run: |
          # Read the YAML file and convert to JSON string to be used with the OAS Validation plugin down the line.
          # The plugin expects the OAS as a JSON string in an environment variable.
          # https://docs.konghq.com/hub/kong-inc/oas-validation/configuration/#config-api_spec
          
          oas_json=$(yq eval -o=json ${{ github.workspace }}/${{ inputs.openapi_spec }} | jq -c .)

          # Set as env variable
          echo "DECK_CONFIG_API_SPEC=${oas_json}" >> $GITHUB_ENV
        

      - name: Lint OpenAPI Specification
        run: spectral lint  ${{ github.workspace }}/${{ inputs.openapi_spec }} --ruleset .spectral.yaml -o oas_lint_results_${{ env.NOW }}.txt
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Show linting results
        if: always()
        run: cat oas_lint_results_${{ env.NOW }}.txt
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Convert OpenAPI Specification to Kong Gateway configuration
        run: cat ${{ github.workspace }}/${{ inputs.openapi_spec }} | deck file openapi2kong > kong.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Add plugins to Kong Gateway configuration
        run: |
          cat kong.yaml | deck file add-plugins \
            plugins/openid-connect.yaml \
            plugins/oas-validation.yaml \
            plugins/rate-limiting.yaml -o kong.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Add namespace to Kong Gateway configuration if required
        if: ${{ env.DECK_NAMESPACE && env.DECK_NAMESPACE != '/' && env.DECK_NAMESPACE != 'null' }}
        run: cat kong.yaml | deck file namespace --path-prefix=${{ env.DECK_NAMESPACE }} -o kong.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      # - name: Add select_tags patch to Kong Gateway configuration
      #   run: cat kong.yaml | deck file patch patches/select_tags.yaml -o kong.yaml
      #   working-directory: ${{ github.workspace }}/examples/apiops

      - name: Output Kong Gateway configuration
        run: cat kong.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Validate Generated Kong Gateway configuration
        run: deck file validate kong.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Get a backup of the previous Kong Gateway configuration
        run: |
          deck gateway dump \
            --konnect-addr="${{ inputs.konnect_server_url }}" \
            --konnect-token="${{ steps.import-token.outputs.SYSTEM_ACCOUNT_TOKEN }}" \
            --konnect-control-plane-name="${{ inputs.control_plane_name }}" -o kong_backup_${{ env.NOW }}.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Diff Kong Gateway configuration
        run: |
          deck gateway diff kong.yaml  \
            --konnect-addr="${{ inputs.konnect_server_url }}" \
            --konnect-token="${{ steps.import-token.outputs.SYSTEM_ACCOUNT_TOKEN }}" \
            --konnect-control-plane-name="${{ inputs.control_plane_name }}" > diff_${{ env.NOW }}.txt
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Sync Kong Gateway configuration
        run: |
          deck gateway sync kong.yaml  \
            --konnect-addr="${{ inputs.konnect_server_url }}" \
            --konnect-token="${{ steps.import-token.outputs.SYSTEM_ACCOUNT_TOKEN }}" \
            --konnect-control-plane-name="${{ inputs.control_plane_name }}"
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Get a backup of the current Kong Gateway configuration
        run: |
          deck gateway dump \
            --konnect-addr="${{ inputs.konnect_server_url }}" \
            --konnect-token="${{ steps.import-token.outputs.SYSTEM_ACCOUNT_TOKEN }}" \
            --konnect-control-plane-name="${{ inputs.control_plane_name }}" -o kong_current_${{ env.NOW }}.yaml
        working-directory: ${{ github.workspace }}/examples/apiops

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            ${{ github.workspace }}/examples/apiops/kong_backup_${{ env.NOW }}.yaml
            ${{ github.workspace }}/examples/apiops/kong_current_${{ env.NOW }}.yaml
            ${{ github.workspace }}/examples/apiops/diff_${{ env.NOW }}.txt
            ${{ github.workspace }}/examples/apiops/oas_lint_results_${{ env.NOW }}.txt
